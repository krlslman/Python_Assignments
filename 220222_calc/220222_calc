# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calc.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(422, 560)
        MainWindow.setStyleSheet("/*\n"
"ABOUT\n"
"===========================================================\n"
"version 1.7a\n"
"QT theme (stylesheet) specially developed for FreeCAD (http://www.freecadweb.org/).\n"
"It might work with other software that uses QT styling.\n"
"\n"
"\n"
"LICENSE\n"
"===========================================================\n"
"Copyright (c) 2015 Pablo Gil Fern√°ndez\n"
"The stylesheet barely uses code from Colin Duquesnoy \"generic QT stylesheet\"\n"
"\n"
"This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.\n"
"To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/4.0/.\n"
"\n"
"\n"
" \n"
"\n"
"CUSTOMIZATION\n"
"===========================================================\n"
"If you would like to change the overall look/style of the theme, just find and replace following colors in the whole file:\n"
"    background darker = #51504d\n"
"    background dark and slighly darker = #61605d\n"
"    background dark = #71706d\n"
"    background normal and slighly darker = #7f7d79\n"
"    background normal = #8a8985\n"
"    background light = #9e9d9a\n"
"    background lighter = #c9c8c7\n"
"\n"
"    lists background = #d3d1cd\n"
"    lists background (alternate) = #cfcdc9\n"
"    lists backgrounds selection = #cbc9c4\n"
"\n"
"    foreground = white\n"
"\n"
"    selection darker = #9d7106\n"
"    selection dark = #e0a108\n"
"    selection normal = #f8bf36\n"
"    selection inbetween normal and light = #f9ca58 (used to build SpinBoxes)\n"
"    selection light = #fad57a\n"
"    selection lighter = #fce6b1\n"
"\n"
" \n"
"*/\n"
"\n"
"/* RESET EVERYTHING */\n"
"QAbstractScrollArea,QCheckBox,QColumnView,QComboBox,QDateEdit,QDateTimeEdit,QDialog,QDialogButtonBox,QDockWidget,QDoubleSpinBox,QFrame,QGroupBox,QHeaderView,QLabel,QLineEdit,QListView,QListWidget,QMainWindow,QMenu,QMenuBar,QMessageBox,QProgressBar,QPushButton,QRadioButton,QScrollBar,QSizeGrip,QSlider,QSpinBox,QSplitter,QStatusBar,QTabBar,QTabWidget,QTableView,QTableWidget,QTextEdit,QTimeEdit,QToolBar,QToolButton,QToolBox,QToolTip,QTreeView,QTreeWidget,QWidget {\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"    border: 0px;\n"
"    border-style: none;\n"
"    background-color: #8a8985; /* set with default background color */\n"
"}\n"
"\n"
"QMdiArea[showImage=\"true\"] {\n"
"    background-image: url(icons/background_freecad.png);\n"
"    background-position: center;\n"
"    background-repeat: no-repeat;\n"
"}\n"
"\n"
"QProgressBar,\n"
"QProgressBar:horizontal {\n"
"    background: #d3d1cd;\n"
"    border: 1px solid #71706d;\n"
"    text-align: center;\n"
"    padding: 1px;\n"
"    border-radius: 4px;\n"
"}\n"
"QProgressBar::chunk,\n"
"QProgressBar::chunk:horizontal {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QToolTip {\n"
"    background-color: #51504d;\n"
"    color: white;\n"
"    padding: 4px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QWidget {\n"
"    color: #51504d;\n"
"    background-color: #8a8985;\n"
"    background-clip: border;\n"
"    border-image: none;\n"
"    outline: 0;\n"
"}\n"
"\n"
"QWidget:focus {\n"
"    border: 1px solid #51504d;\n"
"}\n"
"\n"
"QWidget:disabled {\n"
"    color: #9e9d9a;\n"
"    background-color: #51504d; /* same as QMenu background-color */\n"
"}\n"
"\n"
"QMenuBar {\n"
"    color: #c9c8c7;\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"QMenuBar::item:selected {\n"
"    color: #9d7106;\n"
"    border: 1px solid #f8bf36;\n"
"    background-color: #f8bf36;\n"
"}\n"
"\n"
"QMenuBar::item:pressed {\n"
"    color: #9d7106;\n"
"    border: 1px solid #fad57a;\n"
"    background-color: #fad57a;\n"
"    margin-bottom:-1px;\n"
"    padding-bottom:1px;\n"
"}\n"
"\n"
"QMenu {\n"
"    color: #c9c8c7;\n"
"    background-color: #51504d;\n"
"    margin: 2px;\n"
"    border: 1px solid transparent;\n"
"}\n"
"\n"
"QMenu::icon {\n"
"    margin: 5px;\n"
"    border-style: none;\n"
"}\n"
"\n"
"QMenu::right-arrow {\n"
"    image:url(icons/right_arrow_light.png);\n"
"}\n"
"\n"
"QMenu::item {\n"
"    color: #c9c8c7;\n"
"    background-color: #51504d;\n"
"    padding: 2px 30px 2px 30px;\n"
"    border: 1px solid #51504d; /* reserve space for selection border */\n"
"}\n"
"\n"
"QMenu::item:selected {\n"
"    color: #9d7106;\n"
"    background-color: #fad57a;\n"
"}\n"
"\n"
"QMenu::separator {\n"
"    height: 1px;\n"
"    background-color: #71706d;\n"
"    margin-top: 2px;\n"
"    margin-bottom: 2px;\n"
"    margin-left: 6px;\n"
"    margin-right: 6px;\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive {\n"
"    color: #c9c8c7;\n"
"    background-color: #9e9d9a;\n"
"    border: 1px solid #51504d;\n"
"    width: 11px;\n"
"    height: 11px;\n"
"    border-radius:2px;\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:checked {\n"
"    background-color: #e0a108;\n"
"    border: 1px solid #9d7106;\n"
"    image:url(icons/checkbox_light.png);\n"
"}\n"
"\n"
"QGroupBox {\n"
"    color: #51504d;\n"
"    font-weight: bold;\n"
"    border:1px solid blue;\n"
"    border-radius: 4px;\n"
"    margin-top: 20px;\n"
"    border-color: rgba(0, 0, 0, 20); /* lighter than \"QGroupBox\" border-color */\n"
"    background-color: rgba(255, 255, 255, 15);\n"
"}\n"
"\n"
"QGroupBox::title {\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top left;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"    padding-top: 10px;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QAbstractScrollArea {\n"
"    border-radius: 2px;\n"
"    border: 1px solid #3A3939;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QAbstractScrollArea::corner {\n"
"    border: none;\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QScrollBar:horizontal {\n"
"    height: 15px;\n"
"    margin: 3px 15px 3px 15px;\n"
"    border: 1px transparent #51504d;\n"
"    border-radius: 4px;\n"
"    background-color: #51504d;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"    background-color: #71706d;\n"
"    min-width: 5px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal {\n"
"    margin: 1px 3px 0px 3px; /* 1px to correctly fit the 10px width image */\n"
"    border-image: url(icons/right_arrow_light.png);\n"
"    width: 6px;\n"
"    height: 10px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"    margin: 1px 3px 0px 3px; /* 1px to correctly fit the 10px width image */\n"
"    border-image: url(icons/left_arrow_light.png);\n"
"    height: 10px;\n"
"    width: 6px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal:hover,\n"
"QScrollBar::add-line:horizontal:on {\n"
"    border-image: url(icons/right_arrow_lighter.png);\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:horizontal:hover,\n"
"QScrollBar::sub-line:horizontal:on {\n"
"    border-image: url(icons/left_arrow_lighter.png);\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal,\n"
"QScrollBar::down-arrow:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:horizontal,\n"
"QScrollBar::sub-page:horizontal {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    background-color: #51504d;\n"
"    width: 15px;\n"
"    margin: 15px 3px 15px 3px;\n"
"    border: 1px transparent #51504d;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #71706d;\n"
"    min-height: 5px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    margin: 3px 0px 3px 1px; /* 1px to correctly fit the 10px width image */\n"
"    border-image: url(icons/up_arrow_light.png);\n"
"    height: 6px;\n"
"    width: 10px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    margin: 3px 0px 3px 1px; /* 1px to correctly fit the 10px width image */\n"
"    border-image: url(icons/down_arrow_light.png);\n"
"    height: 6px;\n"
"    width: 10px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover,\n"
"QScrollBar::sub-line:vertical:on {\n"
"    border-image: url(icons/up_arrow_lighter.png);\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover,\n"
"QScrollBar::add-line:vertical:on {\n"
"    border-image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"QScrollBar::up-arrow:vertical,\n"
"QScrollBar::down-arrow:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:vertical,\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QTextEdit {\n"
"    color: #51504d;\n"
"    background-color: #d3d1cd;\n"
"    border: 1px solid #71706d;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QPlainTextEdit {\n"
"    color: #51504d;\n"
"    background-color: #d3d1cd;\n"
"    border-radius: 2px;\n"
"    border: 1px solid #71706d;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QSizeGrip {\n"
"    image: url(icons/sizegrip_light.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked{\n"
"    color: #51504d;\n"
"    background-color: #9e9d9a;\n"
"    border: 1px solid #51504d;\n"
"}\n"
"\n"
"QRadioButton::indicator:checked {\n"
"    background-color: #e0a108;\n"
"    border: 1px solid #9d7106;\n"
"    image:url(icons/radiobutton_light.png);\n"
"}\n"
"\n"
"QCheckBox,\n"
"QRadioButton,\n"
"QCheckBox:disabled,\n"
"QRadioButton:disabled {\n"
"    color: #51504d;\n"
"    padding: 3px;\n"
"    outline: none;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QCheckBox::indicator,\n"
"QGroupBox::indicator {\n"
"    color: #c9c8c7;\n"
"    background-color: #9e9d9a;\n"
"    border: 1px solid #51504d;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 11px;\n"
"    height: 11px;\n"
"    border-radius:2px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 11px;\n"
"    height: 11px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QRadioButton::indicator:pressed,\n"
"QCheckBox::indicator:pressed,\n"
"QCheckBox::indicator:non-exclusive:checked:pressed,\n"
"QCheckBox::indicator:indeterminate:pressed,\n"
"QCheckBox::indicator:checked:pressed {\n"
"    border-color: #fce6b1;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked,\n"
"QGroupBox::indicator:checked {\n"
"    background-color: #e0a108;\n"
"    border: 1px solid #9d7106;\n"
"    image:url(icons/checkbox_light.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:disabled,\n"
"QRadioButton::indicator:disabled {\n"
"    border: 1px solid #71706d;\n"
"}\n"
"\n"
"QCheckBox:disabled,\n"
"QRadioButton::indicator:disabled {\n"
"    color: #71706d;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QCheckBox::indicator:disabled,\n"
"QGroupBox::indicator:disabled,\n"
"QMenu::indicator:non-exclusive:disabled {\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QCheckBox::indicator:indeterminate {\n"
"    background-color: #e0a108;\n"
"    border: 1px solid #9d7106;\n"
"    image: url(icons/checkbox_indeterminate_light.png);\n"
"}\n"
"\n"
"QCheckBox:focus,\n"
"QRadioButton:focus {\n"
"    border: none;\n"
"}\n"
"\n"
"QFrame,\n"
"QFrame:pressed,\n"
"QFrame:focus,\n"
"QFrame:on {\n"
"    border: 1px solid #8a8985;\n"
"    border-radius: 3px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"/* border and background of QComboBox drop-down */\n"
"QComboBox QFrame,\n"
"QComboBox QFrame:pressed,\n"
"QComboBox QFrame:focus,\n"
"QComboBox QFrame:on {\n"
"    border: 1px solid #51504d;\n"
"    background-color: #51504d;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QFrame[frameShape=\"0\"] {\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QFrame[height=\"3\"],\n"
"QFrame[width=\"3\"] {\n"
"    border-color: transparent;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QFrame[height=\"3\"] {\n"
"    border-top-color: #71706d;\n"
"}\n"
"\n"
"QFrame[width=\"3\"] {\n"
"    border-left-color: #71706d;\n"
"}\n"
"\n"
"QPushButton {\n"
"    color: #c9c8c7;\n"
"    text-align: center;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #71706d, stop:1 #8a8985);\n"
"    border: 1px solid #51504d;\n"
"    padding: 5px 12px 5px 12px;\n"
"    margin: 4px 8px 4px 8px;\n"
"    border-radius: 3px;\n"
"    min-width: 14px;\n"
"    min-height: 14px;\n"
"}\n"
"\n"
"QPushButton:hover,\n"
"QPushButton:focus {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QPushButton:disabled,\n"
"QPushButton:disabled:checked {\n"
"    color: #71706d;\n"
"    background-color: #8a8985;\n"
"    border-color: #71706d;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #e0a108;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #f8bf36;\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"/* Color Buttons */\n"
"Gui--ColorButton,\n"
"Gui--ColorButton:disabled {\n"
"    border-color: transparent;\n"
"    background-color: transparent;\n"
"    height: 24px;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"Gui--ColorButton:hover {\n"
"    border-color: #7f7d79;\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"/* Buttons inside the toolbar */\n"
"QToolBar QPushButton {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #7f7d79, stop:1 #8a8985);\n"
"    border: 1px solid #71706d;\n"
"    min-width: 22px;\n"
"    min-height: 22px;\n"
"    margin-left: 2px;\n"
"    margin-right: 2px;\n"
"    margin-bottom: 3px; /*bigger margin to correctly separate buttons inside a vertical toolbar */\n"
"    margin-top: 1px;\n"
"    padding: 1px;\n"
"}\n"
"\n"
"QToolBar QPushButton:hover,\n"
"QToolBar QPushButton:focus {\n"
"    color: #c9c8c7;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #7f7d79, stop:1 #8a8985);\n"
"    border: 1px solid #51504d;\n"
"}\n"
"\n"
"QToolBar QPushButton:disabled,\n"
"QToolBar QPushButton:disabled:checked {\n"
"    background-color: #8a8985;\n"
"    border-color: #7f7d79;\n"
"}\n"
"\n"
"QToolBar QPushButton:pressed {\n"
"    background-color: #71706d;\n"
"    border-color: #71706d;\n"
"}\n"
"\n"
"QToolBar QPushButton:checked {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #f8bf36, stop:1 #fad57a);\n"
"    border-color: #f8bf36;\n"
"}\n"
"\n"
"QToolBar QPushButton:checked:hover,\n"
"QToolBar QPushButton:checked:focus {\n"
"    color: #c9c8c7;\n"
"    border: 1px solid #e0a108;\n"
"}\n"
"\n"
"QToolBar {\n"
"    border: 1px transparent #393838;\n"
"    background-color: #8a8985;\n"
"    font-weight: bold;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QToolBar::handle:horizontal {\n"
"    background-image: url(icons/Hmovetoolbar_dark.png);\n"
"    width: 10px;\n"
"    margin: 6px 2px 6px 2px;\n"
"    background-position: top right;\n"
"    background-repeat: repeat-y;\n"
"}\n"
"\n"
"QToolBar::handle:vertical {\n"
"    background-image: url(icons/Vmovetoolbar_dark.png);\n"
"    height: 10px;\n"
"    margin: 2px 6px 2px 6px;\n"
"    background-position: left bottom;\n"
"    background-repeat: repeat-x;\n"
"}\n"
"\n"
"QToolBar::separator:horizontal {\n"
"    background-image: url(icons/separtoolbar_dark.png);\n"
"    width: 10px;\n"
"    margin: 6px 2px 6px 2px;\n"
"    background-position: center center;\n"
"    background-repeat: repeat-y;\n"
"}\n"
"\n"
"QToolBar::separator:vertical {\n"
"    background-image: url(icons/separtoolbar_dark.png);\n"
"    height: 10px;\n"
"    margin: 2px 6px 2px 6px;\n"
"    background-position: center center;\n"
"    background-repeat: repeat-x;\n"
"}\n"
"\n"
"QStackedWidget {\n"
"    background-color: #8a8985;\n"
"    border: 1px transparent #8a8985;\n"
"}\n"
"\n"
"QAbstractSpinBox {\n"
"    color: #c9c8c7;\n"
"    border: 1px solid #71706d; /* border top color defined after QAbstractSpinBox, QLineEdit and QComboBox */\n"
"    background-color: #71706d;\n"
"    selection-color: white;\n"
"    selection-background-color: #f8bf36;\n"
"}\n"
"\n"
"QAbstractSpinBox:disabled {\n"
"    color: #9e9d9a;\n"
"    background-color: #7f7d79;\n"
"    border-color: #7f7d79;\n"
"}\n"
"\n"
"QAbstractSpinBox:up-button {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #f9ca58, stop:1 #fad57a);\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    border-top-right-radius: 3px;\n"
"    height: 13px;\n"
"    width: 20px;\n"
"}\n"
"\n"
"QAbstractSpinBox:down-button {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #f8bf36, stop:1 #f9ca58);\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    border-bottom-right-radius: 3px;\n"
"    height: 13px;\n"
"    width: 20px;\n"
"}\n"
"\n"
"QAbstractSpinBox:up-button:disabled,\n"
"QAbstractSpinBox:down-button:disabled {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QAbstractSpinBox::up-arrow {\n"
"    image: url(icons/up_arrow_light.png);\n"
"    top: 0px; /* fix simetry between up and down images */\n"
"}\n"
"\n"
"QAbstractSpinBox::up-arrow:hover {\n"
"    image: url(icons/up_arrow_lighter.png);\n"
"}\n"
"\n"
"QAbstractSpinBox::up-arrow:off {\n"
"    image: url(icons/up_arrow_disabled_dark.png);\n"
"}\n"
"\n"
"QAbstractSpinBox::up-arrow:disabled {\n"
"    image: none;\n"
"}\n"
"\n"
"QAbstractSpinBox::down-arrow {\n"
"    image: url(icons/down_arrow_light.png);\n"
"    bottom: -2px; /* fix simetry between up and down images */\n"
"}\n"
"QAbstractSpinBox::down-arrow:hover {\n"
"    image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"QAbstractSpinBox::down-arrow:off {\n"
"    image: url(icons/down_arrow_disabled_dark.png);\n"
"}\n"
"\n"
"QAbstractSpinBox::down-arrow:disabled {\n"
"    image: none;\n"
"}\n"
"\n"
"QToolBar QAbstractSpinBox {\n"
"    margin-top: 0px;\n"
"    margin-bottom: 0px;\n"
"}\n"
"\n"
"QLineEdit {\n"
"    color: #c9c8c7;\n"
"    background-color: #71706d;\n"
"    selection-color: white;\n"
"    selection-background-color: #f8bf36;\n"
"    /* Padding and margin defined */\n"
"    border-style: solid;\n"
"    border: 1px solid #71706d; /* border top color defined after QAbstractSpinBox, QLineEdit and QComboBox */\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QAbstractSpinBox:focus,\n"
"QLineEdit:focus,\n"
"QComboBox:focus {\n"
"    border-color: #fad57a;\n"
"}\n"
"\n"
"QComboBox {\n"
"    color: #c9c8c7;\n"
"    background-color: #71706d;\n"
"    selection-color: white;\n"
"    selection-background-color: #f8bf36;\n"
"    border: 1px solid #71706d; /* border top color defined after QAbstractSpinBox, QLineEdit and QComboBox */\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QComboBox:on {\n"
"    color: white;\n"
"    background-color: #71706d;\n"
"    border-color: #fad57a;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left-width: 1px;\n"
"    border-left-color: transparent;\n"
"    border-left-style: solid;\n"
"    border-top-right-radius: 3px;\n"
"    border-bottom-right-radius: 3px;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #f8bf36, stop:1 #fad57a);\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(icons/down_arrow_light.png);\n"
"}\n"
"\n"
"QComboBox::down-arrow:on,\n"
"QComboBox::down-arrow:hover,\n"
"QComboBox::down-arrow:focus {\n"
"    image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    color: #c9c8c7;\n"
"    background-color: #51504d;\n"
"    border-radius: 3px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"    border: none;\n"
"}\n"
"\n"
"/* Common parameters for QAbstractSpinBox, QLineEdit and QComboBox */\n"
"QSpinBox,\n"
"QDoubleSpinBox,\n"
"QAbstractSpinBox,\n"
"QLineEdit,\n"
"QComboBox {\n"
"    border-top-color: #61605d; /* Creates an inset effect inside the elements */\n"
"    padding: 2px 6px 2px 6px; /* This makes text colour work on QComboBox */\n"
"    margin: 0px 2px 0px 2px;\n"
"    min-width: 70px; /* it was 120 because of QCombobox... */\n"
"    border-radius: 3px;\n"
"}\n"
"/* end Common parameters */\n"
"\n"
"QAbstractItemView {\n"
"    color: #51504d;\n"
"    alternate-background-color: #cfcdc9; /* related with QListView background  */\n"
"    border: 1px solid #51504d;\n"
"    border-radius: 3px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"/* hack to deactivate changing background color when focus (due to QFrame generic transparent color) */\n"
"QAbstractItemView:selected,\n"
"QAbstractItemView:on,\n"
"QAbstractItemView:focus {\n"
"    background-color: #d3d1cd; /* same as QTable background color */\n"
"}\n"
"\n"
"/* hack to hide weird redundant information inside the value of a Placement cell */\n"
"QTreeView QLabel,\n"
"QTreeView QLabel:disabled {\n"
"    color: transparent;\n"
"    background-color: transparent;\n"
"    border: none;\n"
"    border-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QTreeView QLineEdit {\n"
"    color: #c9c8c7;\n"
"    border-color: #71706d;\n"
"    background-color: #71706d;\n"
"    selection-color: white;\n"
"    selection-background-color: #f8bf36;\n"
"}\n"
"\n"
"/* hack to hide non editable cells inside Property values */\n"
"QTreeView QLineEdit:read-only,\n"
"QTreeView QLineEdit:disabled,\n"
"QTreeView QAbstractSpinBox:read-only,\n"
"QTreeView QAbstractSpinBox:disabled {\n"
"    color: transparent;\n"
"    border-color: transparent;\n"
"    background-color: transparent;\n"
"    selection-color: transparent;\n"
"    selection-background-color: transparent;\n"
"}\n"
"\n"
"/* hack to disable margin inside Property values to following elements */\n"
"QTreeView QSpinBox,\n"
"QTreeView QDoubleSpinBox,\n"
"QTreeView QAbstractSpinBox,\n"
"QTreeView QLineEdit,\n"
"QTreeView QComboBox {\n"
"    margin-left: 0px;\n"
"    margin-right: 0px;\n"
"}\n"
"\n"
"/* Pushbutton style for \"...\" inside Placement cell which launches Placement tool */\n"
"QTreeView QPushButton {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #71706d, stop:1 #8a8985);\n"
"    border-top: none;\n"
"    border-bottom: none;\n"
"    border-right: none;\n"
"    border-left: 1px solid #71706d;\n"
"    border-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"    height: 24px;\n"
"}\n"
"\n"
"/* Color Buttons inside the \"Properties window\" */\n"
"QAbstractItemView Gui--ColorButton {\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"    height: 10px;\n"
"}\n"
"\n"
"QAbstractItemView QPushButton:hover {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QAbstractItemView QPushButton:disabled {\n"
"    color: transparent;\n"
"    background-color: transparent;\n"
"    border-color: transparent;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: 0px solid #51504d;\n"
"}\n"
"\n"
"QTabWidget{\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget:focus {\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;\n"
"    padding: 0px;\n"
"    background-color: #8a8985;\n"
"    position: absolute;\n"
"    top: -15px;\n"
"    padding-top: 15px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    alignment: center;\n"
"}\n"
"\n"
"QTabBar {\n"
"    qproperty-drawBase: 0;\n"
"    left: 5px;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar:focus {\n"
"    border: 0px transparent black;\n"
"}\n"
"\n"
"QTabBar::close-button {\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"    border-radius: 2px;\n"
"    background-image: url(icons/close_dark.png);\n"
"    background-position: center center;\n"
"    background-repeat: none;\n"
"}\n"
"\n"
"QTabBar::close-button:hover {\n"
"    background-color: #fad57a;\n"
"}\n"
"\n"
"QTabBar::close-button:pressed {\n"
"    background-color: #fce6b1;\n"
"}\n"
"\n"
"QTabBar::scroller { /* the width of the scroll buttons */\n"
"    width: 20px;\n"
"}\n"
"\n"
"/* the scroll buttons are tool buttons */\n"
"QTabBar QToolButton,\n"
"QTabBar QToolButton:hover { \n"
"    margin-top: 4px;\n"
"    margin-bottom: 4px;\n"
"    margin-left: 0px;\n"
"    margin-right: 0px;\n"
"    padding: 0px;\n"
"    border: none;\n"
"    background-color: #8a8985;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow:enabled {\n"
"     image: url(icons/right_arrow_light.png);\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow:disabled,\n"
"QTabBar QToolButton::right-arrow:off {\n"
"     image: url(icons/right_arrow_disabled_dark.png);\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow:hover {\n"
"     image: url(icons/right_arrow_lighter.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::left-arrow:enabled {\n"
"     image: url(icons/left_arrow_light.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::left-arrow:disabled,\n"
" QTabBar QToolButton::left-arrow:off {\n"
"     image: url(icons/left_arrow_disabled_dark.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::left-arrow:hover {\n"
"     image: url(icons/left_arrow_lighter.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::up-arrow:enabled {\n"
"     image: url(icons/up_arrow_light.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::up-arrow:disabled,\n"
" QTabBar QToolButton::up-arrow:off {\n"
"     image: url(icons/up_arrow_disabled_dark.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::up-arrow:hover {\n"
"     image: url(icons/up_arrow_lighter.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::down-arrow:enabled {\n"
"     image: url(icons/down_arrow_light.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::down-arrow:disabled,\n"
" QTabBar QToolButton::down-arrow:off {\n"
"     image: url(icons/down_arrow_disabled_dark.png);\n"
"}\n"
"\n"
" QTabBar QToolButton::down-arrow:hover {\n"
"     image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"/* TOP and BOTTOM TABS */\n"
"QTabBar::tab:top,\n"
"QTabBar::tab:bottom {\n"
"    color: #c9c8c7;\n"
"    border: 1px solid #71706d;\n"
"    border-left-color: #8a8985;\n"
"    border-right-width: 0px;\n"
"    background-color: #71706d;\n"
"    padding:5px 15px;\n"
"    margin-top: 4px;\n"
"    margin-bottom: 4px;\n"
"    position: center;\n"
"}\n"
"\n"
"QTabBar::tab:top:first,\n"
"QTabBar::tab:bottom:first {\n"
"    border-top-left-radius: 6px;\n"
"    border-bottom-left-radius: 6px;\n"
"}\n"
"\n"
"QTabBar::tab:top:last,\n"
"QTabBar::tab:bottom:last {\n"
"    border-top-right-radius: 6px;\n"
"    border-bottom-right-radius: 6px;\n"
"    border-right-width: 1px;\n"
"}\n"
"\n"
"QTabBar::tab:top:selected,\n"
"QTabBar::tab:bottom:selected {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QTabBar::tab:top:!selected:hover,\n"
"QTabBar::tab:bottom:!selected:hover {\n"
"    color: white;\n"
"}\n"
"\n"
"QTabBar::tab:top:only-one ,\n"
"QTabBar::tab:bottom:only-one {\n"
"    border: 1px solid #9d7106;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"/* LEFT and RIGHT TABS */\n"
"QTabBar::tab:left,\n"
"QTabBar::tab:right {\n"
"    color: #c9c8c7;\n"
"    border: 1px solid #71706d;\n"
"    border-top-color: #8a8985;\n"
"    border-bottom-width: 0px;\n"
"    background-color: #71706d;\n"
"    padding: 15px 5px;\n"
"    margin-left: 4px;\n"
"    margin-right: 4px;\n"
"    position: center;\n"
"}\n"
"\n"
"QTabBar::tab:left:first,\n"
"QTabBar::tab:right:first {\n"
"    border-top-left-radius: 6px;\n"
"    border-top-right-radius: 6px;\n"
"}\n"
"\n"
"QTabBar::tab:left:last,\n"
"QTabBar::tab:right:last {\n"
"    border-bottom-left-radius: 6px;\n"
"    border-bottom-right-radius: 6px;\n"
"    border-bottom-width: 1px;\n"
"}\n"
"\n"
"QTabBar::tab:left:selected,\n"
"QTabBar::tab:right:selected {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:0.545, y1:1, x2:0, y2:1, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QTabBar::tab:left:!selected:hover,\n"
"QTabBar::tab:right:!selected:hover {\n"
"    color: white;\n"
"}\n"
"\n"
"QTabBar::tab:left:only-one ,\n"
"QTabBar::tab:right:only-one {\n"
"    border: 1px solid #9d7106;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QDockWidget {\n"
"    color: #51504d;\n"
"    border: 1px solid #8a8985;\n"
"    titlebar-close-icon: url(icons/close_dark.png);\n"
"    titlebar-normal-icon: url(icons/undock_dark.png);\n"
"}\n"
"\n"
"QDockWidget::title {\n"
"    text-align: center;\n"
"    background-color: #7f7d79;\n"
"    padding: 4px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QDockWidget::close-button,\n"
"QDockWidget::float-button {\n"
"    border: 1px transparent #8a8985;\n"
"    border-radius: 2px;\n"
"    background: transparent;\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: right center;\n"
"}\n"
"\n"
"QDockWidget::close-button {\n"
"    right: 4px;\n"
"}\n"
"    \n"
"QDockWidget::float-button {\n"
"    right: 22px;\n"
"}\n"
"\n"
"QDockWidget::close-button:hover,\n"
"QDockWidget::float-button:hover {\n"
"    background: #9e9d9a;\n"
"}\n"
"\n"
"QDockWidget::close-button:pressed,\n"
"QDockWidget::float-button:pressed {\n"
"    /*padding: 1px -1px -1px 1px;*/\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"QTreeView,\n"
"QListView {\n"
"    color: #51504d;\n"
"    border: 1px solid #8a8985;\n"
"    border-radius: 4px;\n"
"    background-color: #d3d1cd;  /* related with alternate-background-color*/\n"
"    selection-color: white;\n"
"    selection-background-color: #f8bf36; /* should be similar to QListView::item selected background-color */\n"
"    show-decoration-selected: 1; /* make the selection span the entire width of the view */\n"
"    padding: 0px;\n"
"    margin: 0px 4px 0px 4px;\n"
"    min-width: 130px; /* hack to correctly align Preferences icon list  */\n"
"}\n"
"\n"
"QListView,\n"
"QListView::item,\n"
"QListView QAbstractItemView {\n"
"    margin: 0px;\n"
"    icon-size: 20px; /* temporal */\n"
"    paint-alternating-row-colors-for-empty-area: 1;\n"
"    position: absolute;\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: left top;\n"
"}\n"
"\n"
"/* Control dropdown list margins of QComboBox */\n"
"QComboBox QTreeView,\n"
"QComboBox QListView {\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QListView::item {\n"
"    border: 0px transparent #8a8985;\n"
"    border-radius: 4px;\n"
"    background-color: transparent;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"    display: inline-block;\n"
"    position: relative;\n"
"}\n"
"\n"
"QListView::item:selected,\n"
"QTreeView::item:selected  {\n"
"    color: white;\n"
"    background-color: #f8bf36; /* should be similar to QListView selection-background-color */\n"
"}\n"
"\n"
"/* Branch system */\n"
"QTreeView::branch  {\n"
"    background: transparent;\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:!adjoins-item  {\n"
"    border-image: url(icons/branch_vline.png) 0;\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:adjoins-item  {\n"
"    border-image: url(icons/branch_more.png) 0;\n"
"}\n"
"\n"
"QTreeView::branch:!has-children:!has-siblings:adjoins-item  {\n"
"    border-image: url(icons/branch_end.png) 0;\n"
"}\n"
"\n"
"QTreeView::branch:closed:has-children:has-siblings  {\n"
"    image: url(icons/branch_closed_dark.png);\n"
"}\n"
"\n"
"QTreeView::branch:has-children:!has-siblings:closed  {\n"
"    image: url(icons/branch_closed_dark.png);\n"
"    border-image: url(icons/branch_end.png) 0;\n"
"}\n"
"\n"
"QTreeView::branch:open:has-children:has-siblings  {\n"
"    image: url(icons/branch_open_dark.png);\n"
"    border-image: url(icons/branch_more.png) 0;\n"
"}\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings  {\n"
"    image: url(icons/branch_open_dark.png);\n"
"    border-image: url(icons/branch_end.png) 0;\n"
"}\n"
"\n"
"QSlider,\n"
"QSlider:active,\n"
"QSlider:!active {\n"
"    border: none;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QSlider:horizontal {\n"
"    padding: 0px 10px;\n"
"}\n"
"\n"
"QSlider:vertical {\n"
"    padding: 10px 0px;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"    border: 1px solid #71706d;\n"
"    background-color: #71706d;\n"
"    height: 8px;\n"
"    border-radius: 5px;\n"
"    margin: 4px 0;\n"
"}\n"
"\n"
"QSlider::groove:vertical {\n"
"    border: 1px solid #71706d;\n"
"    background-color: #71706d;\n"
"    width: 8px;\n"
"    border-radius: 5px;\n"
"    margin: 4px 0;\n"
"}\n"
"\n"
"QSlider::groove:horizontal:disabled,\n"
"QSlider::groove:vertical:disabled {\n"
"    border-color:  #7f7d79;\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"QSlider::handle:horizontal,\n"
"QSlider::handle:vertical {\n"
"    background-color: #51504d;\n"
"    border: 1px solid #51504d;\n"
"    width: 14px;\n"
"    height: 14px;\n"
"    border-radius: 8px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    margin: -4px 0;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    margin: 0 -4px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover,\n"
"QSlider::handle:vertical:hover {\n"
"    border-color: #e0a108;\n"
"    background-color: #e0a108;\n"
"}\n"
"\n"
"QSlider::handle:horizontal:pressed,\n"
"QSlider::handle:vertical:pressed {\n"
"    border-color: #9d7106;\n"
"    background-color: #9d7106;\n"
"}\n"
"\n"
"QSlider::handle:horizontal:disabled,\n"
"QSlider::handle:vertical:disabled {\n"
"    border-color: #71706d;\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QToolButton {\n"
"    color: #c9c8c7;\n"
"    text-align: center;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #71706d, stop:1 #8a8985);\n"
"    border: 1px solid #51504d;\n"
"    padding-top: 5px;\n"
"    padding-bottom: 5px;\n"
"    padding-left: 15px;\n"
"    padding-right: 15px;\n"
"    margin-top: 5px;\n"
"    margin-bottom: 5px;\n"
"    margin-left: 10px;\n"
"    margin-right: 10px;\n"
"    border-radius: 3px;\n"
"    outline: none;\n"
"}\n"
"\n"
"QToolButton:hover,\n"
"QToolButton:focus {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QToolButton:disabled,\n"
"QToolButton:disabled:checked {\n"
"    color: #71706d;\n"
"    background-color: #8a8985;\n"
"    border-color: #71706d;\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    border-color: #fad57a;\n"
"}\n"
"\n"
"QToolButton:checked {\n"
"    background-color: #f8bf36;\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QToolButton::menu-indicator  {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: center right;\n"
"    right: 4px;\n"
"}\n"
"\n"
"/*The \"show more\" button  (it can also be stylable with \"QToolBarExtension\" */\n"
"QToolButton#qt_toolbar_ext_button {\n"
"    border-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"    /*background-image: url(icons/more_dark.png);*/\n"
"    image: transparent;\n"
"    background-repeat: none;\n"
"    background-position: center left;\n"
"}\n"
"\n"
"QToolButton#qt_toolbar_ext_button:hover {\n"
"    /*background-image: url(icons/more_light.png);*/\n"
"    border-color: #7f7d79;\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"QToolButton#qt_toolbar_ext_button:on {\n"
"    /*background-image: url(icons/more_light.png);*/\n"
"    border-color: #7f7d79;\n"
"    background-color: #7f7d79;\n"
"}\n"
"\n"
"/*Buttons inside the Toolbar*/\n"
"QToolBar QToolButton {\n"
"    color: #51504d;\n"
"    background-color: #8a8985;\n"
"    border: 1px transparent #8a8985;\n"
"    border-radius: 3px;\n"
"    margin: 0px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QToolBar QToolButton:disabled {\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QToolBar QToolButton:checked {\n"
"    color: #9d7106;\n"
"    background-color: #f8bf36;\n"
"    border: 1px solid #f8bf36;\n"
"}\n"
"\n"
"QToolBar QToolButton:hover {\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QToolBar QToolButton:pressed,\n"
"QToolBar QToolButton::menu-button:pressed {\n"
"    background-color: #7f7d79;\n"
"    border: 1px solid #7f7d79;\n"
"}\n"
"\n"
"\n"
"QToolBar QToolButton::menu-indicator:hover,\n"
"QToolBar QToolButton::menu-indicator:pressed {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"/* the subcontrols below are used only in the MenuButtonPopup mode */\n"
"QToolBar QToolButton::menu-button {\n"
"    border: 1px transparent #4A4949;\n"
"    border-top-right-radius: 3px;\n"
"    border-bottom-right-radius: 3px;\n"
"    width: 16px; /* 16px width + 4px for border = 20px allocated above */\n"
"    outline: none;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QToolBar QToolButton::menu-button:hover,\n"
"QToolBar QToolButton::menu-button:active,\n"
"QToolBar QToolButton::menu-button:disabled {\n"
"    border-color: transparent;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QToolBar QToolButton::menu-arrow {\n"
"    background-image: url(icons/down_arrow_light.png);\n"
"    background-position: center center;\n"
"    background-repeat: none;\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: bottom right;\n"
"    height: 10px; /* same as arrow image */\n"
"}\n"
"\n"
"QToolBar QToolButton::menu-arrow:open {\n"
"    background-image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"QToolBar:tear {\n"
"    color: blue;\n"
"    background-color: red;\n"
"}\n"
"\n"
"QTableView {\n"
"    color: #51504d;\n"
"    border: 1px solid #71706d;\n"
"    gridline-color: #9e9d9a;\n"
"    background-color: #d3d1cd;\n"
"    selection-color: #51504d;\n"
"    selection-background-color: #fce6b1;\n"
"    border-radius: 3px;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QTableView::item:hover  {\n"
"    background: #cbc9c4;\n"
"}\n"
"\n"
"QTableView::item:disabled  {\n"
"    color: #8a8985;\n"
"}\n"
"\n"
"QTableView::item:selected  {\n"
"    color: #9d7106;\n"
"    background-color: #fad57a;\n"
"}\n"
"\n"
"/* when editing a cell: */\n"
"QTableView QLineEdit {\n"
"    color: #51504d;\n"
"    background-color: #cfcdc9;\n"
"    border-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QHeaderView {\n"
"    border: none;\n"
"    background-color: #51504d;\n"
"    border-top-left-radius: 3px;\n"
"    border-top-right-radius: 3px;\n"
"    border-bottom-left-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QHeaderView::section  {\n"
"    background-color: transparent;\n"
"    color: #c9c8c7;\n"
"    border: 1px solid transparent;\n"
"    border-radius: 0px;\n"
"    text-align: center;\n"
"}\n"
"\n"
"QHeaderView::section::vertical  {\n"
"    padding: 0px 6px 0px 6px;\n"
"    border-bottom: 1px solid #71706d;\n"
"}\n"
"\n"
"QHeaderView::section::vertical:first {\n"
"    border-top: 1px solid  #71706d;\n"
"}\n"
"\n"
"QHeaderView::section::vertical:last {\n"
"    border-bottom: none;\n"
"}\n"
"\n"
"QHeaderView::section::vertical:only-one {\n"
"    border: none;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal  {\n"
"    padding: 0px 0px 0px 6px;\n"
"    border-right: 1px solid #71706d;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal:first {\n"
"    border-left: 1px solid #71706d;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal:last {\n"
"    border-left: none;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal:only-one {\n"
"    border: none;\n"
"}\n"
"\n"
"QDockWidget QHeaderView::section {\n"
"    border-width: 6px 1px 6px 1px; /* hack to bigger margin for Model Panel table headers */\n"
"}\n"
"\n"
"QHeaderView::section:checked {\n"
"    color: #9d7106;\n"
"    background-color: #fad57a;\n"
"}\n"
"\n"
" /* style the sort indicator */\n"
"QHeaderView::down-arrow {\n"
"    image: url(icons/down_arrow_light.png);\n"
"}\n"
"\n"
"QHeaderView::up-arrow {\n"
"    image: url(icons/up_arrow_light.png);\n"
"}\n"
"\n"
"QTableCornerButton::section {\n"
"    background-color: #51504d;\n"
"    border: 1px solid #51504d;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QToolBox  {\n"
"    padding: 3px;\n"
"    color: #9d7106;\n"
"    border: none;\n"
"}\n"
"\n"
"QToolBox::tab { /* TODO */\n"
"    color: #c9c8c7;\n"
"    background-color: #71706d;\n"
"    border: 1px transparent #51504d;\n"
"    border-bottom: 1px transparent #71706d;\n"
"    border-top-left-radius: 5px;\n"
"    border-top-right-radius: 5px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QToolBox::tab:selected { /* italicize selected tabs */\n"
"    color: #9d7106;\n"
"    font: italic;\n"
"    background-color: #f8bf36;\n"
"    border-color: #f8bf36;\n"
" }\n"
"\n"
"QStatusBar::item {\n"
"    color: #c9c8c7;\n"
"    background-color: #8a8985;\n"
"    border: 1px solid #8a8985;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QSplitter::handle {\n"
"    background-color: #8a8985;\n"
"    margin: 0px 11px;\n"
"    padding: 0px;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"QSplitter::handle:vertical {\n"
"    background-image: url(icons/splitter_horizontal_dark.png);\n"
"    background-position: center center;\n"
"    background-repeat: none;\n"
"    margin: 2px 10px 2px 10px;\n"
"    height: 2px;\n"
"}\n"
"\n"
"QSplitter::handle:horizontal {\n"
"    background-image: url(icons/splitter_horizontal_dark.png);\n"
"    background-position: center center;\n"
"    background-repeat: none;\n"
"    margin: 10px 2px 10px 2px;\n"
"    width: 2px;\n"
"}\n"
"\n"
"QSplitter::handle:horizontal:hover,\n"
"QSplitter::handle:vertical:hover {\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"/* Similar to the splitter is the following window separator: */\n"
"QMainWindow::separator {\n"
"    border: 1px solid #8a8985;\n"
"    background-color: #8a8985;\n"
"    background-position: center center;\n"
"    background-repeat: none;\n"
"}\n"
"\n"
"QMainWindow::separator:hover {\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QMainWindow::separator:horizontal {\n"
"    height: 4px;\n"
"    background-image: url(icons/splitter_horizontal_dark.png);\n"
"}\n"
"\n"
"QMainWindow::separator:vertical {\n"
"    width: 4px;\n"
"    background-image: url(icons/splitter_vertical_dark.png);\n"
"}\n"
"\n"
"QLabel {\n"
"    padding-top: 3px;\n"
"    padding-bottom: 3px;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QLabel:disabled {\n"
"    color: #71706d;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"/* Action group */\n"
"QFrame[class=\"panel\"] {\n"
"    border: none;\n"
"    background-color: #8a8985;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"] {\n"
"    border: none;\n"
"    background-color: #51504d;\n"
"    border-top-left-radius: 3px;\n"
"    border-top-right-radius: 3px;\n"
"    border-bottom-left-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"]:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"header\"] {\n"
"    text-align: left;\n"
"    font-weight: bold;\n"
"    color: #c9c8c7;\n"
"    background-color: transparent;\n"
"    border: none;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"header\"]:hover {\n"
"    color: white;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"] QLabel {\n"
"    background-color: transparent;\n"
"    background-image: url(icons/down_arrow_light.png);\n"
"    background-repeat: none;\n"
"    background-position: center center;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"] QLabel:hover {\n"
"    background-color: transparent;\n"
"    background-image: url(icons/down_arrow_lighter.png);\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"] QLabel[fold=\"true\"] {\n"
"    background-color: transparent;\n"
"    background-image: url(icons/up_arrow_light.png);\n"
"    background-repeat: none;\n"
"    background-position: center center;\n"
"    padding: 0px;\n"
"    margin: 0px;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"header\"] QLabel[fold=\"true\"]:hover {\n"
"    background-color: transparent;\n"
"    background-image: url(icons/up_arrow_lighter.png);\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] {\n"
"    background-color: #d3d1cd;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"    border: none;\n"
"    border-top-left-radius: 0px;\n"
"    border-top-right-radius: 0px;\n"
"    border-bottom-left-radius: 3px;\n"
"    border-bottom-right-radius: 3px;\n"
"}\n"
"\n"
"/* HACK\n"
"This might not be the best way to reset the background color: */\n"
"QSint--ActionGroup QFrame[class=\"content\"] QWidget {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #71706d, stop:1 #8a8985);\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton:hover,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton:focus {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton:disabled,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton:disabled:checked {\n"
"    color: #d3d1cd;\n"
"    border-color: #9e9d9a;\n"
"    background-color: #9e9d9a;\n"
"}\n"
"QSint--ActionGroup QFrame[class=\"content\"] QPushButton:checked {\n"
"    background-color: #f8bf36;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QComboBox {\n"
"    background-color: #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QComboBox:on {\n"
"    background-color: #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QComboBox QAbstractItemView {\n"
"    border-color: #51504d;\n"
"    background-color: #51504d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QListView {\n"
"    border-color: #cbc9c4;\n"
"    background-color: #cbc9c4;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QAbstractSpinBox {\n"
"    background-color: #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QLineEdit {\n"
"    background-color: #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QComboBox:disabled,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QAbstractSpinBox:disabled,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QLineEdit:disabled {\n"
"    color: #d3d1cd;\n"
"    border-color: #9e9d9a;\n"
"    background-color: #9e9d9a;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QCheckBox:disabled,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QRadioButton:disabled {\n"
"    color: #9e9d9a;\n"
"    border-color: #9e9d9a;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QCheckBox::indicator:disabled,\n"
"QSint--ActionGroup QFrame[class=\"content\"] QRadioButton::indicator:disabled {\n"
"    border-color: #9e9d9a;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView {\n"
"    border: none;\n"
"    background-color: #51504d;\n"
"    border-radius: 0px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView::section  {\n"
"    background-color: transparent;\n"
"    color: #c9c8c7;\n"
"    border: 1px solid transparent;\n"
"    border-radius: 0px;\n"
"    text-align: center;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView::section::horizontal  {\n"
"    padding: 6px 0px 6px 6px;\n"
"    border-right: 1px solid #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView::section::horizontal:first {\n"
"    border-left: 1px solid #8a8985;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView::section::horizontal:last {\n"
"    border-left: none;\n"
"}\n"
"\n"
"QSint--ActionGroup QFrame[class=\"content\"] QHeaderView::section::horizontal:only-one {\n"
"    border: none;\n"
"}\n"
"/* enf of HACK */\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"action\"],\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:enabled {\n"
"    font-weight: bold;\n"
"    color: #71706d;\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:hover,\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:enabled:hover {\n"
"    text-decoration: none;\n"
"    color: #51504d;\n"
"    background-color: #cbc9c4;\n"
"    border-color: #cbc9c4;\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:disabled {\n"
"    color: #8a8985;\n"
"    background-color: #cbc9c4;\n"
"    border-color: #cbc9c4;\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:focus,\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:pressed\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:enabled:focus,\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:enabled:pressed {\n"
"    color: white;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #e0a108, stop:1 #f8bf36);\n"
"    border-color: #e0a108;\n"
"}\n"
"\n"
"QSint--ActionGroup QToolButton[class=\"action\"]:on {\n"
"    background-color: red;\n"
"    color: red;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.outputLabel = QtWidgets.QLabel(self.centralwidget)
        self.outputLabel.setGeometry(QtCore.QRect(0, 0, 421, 141))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.outputLabel.setFont(font)
        self.outputLabel.setStyleSheet("background-color: rgb(235, 235, 235);")
        self.outputLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.outputLabel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.outputLabel.setLineWidth(2)
        self.outputLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.outputLabel.setObjectName("outputLabel")
        self.percentButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("%"))
        self.percentButton.setGeometry(QtCore.QRect(0, 140, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.percentButton.sizePolicy().hasHeightForWidth())
        self.percentButton.setSizePolicy(sizePolicy)
        self.percentButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.percentButton.setFont(font)
        self.percentButton.setObjectName("percentButton")
        self.CEButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("CE"))
        self.CEButton.setGeometry(QtCore.QRect(104, 140, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CEButton.sizePolicy().hasHeightForWidth())
        self.CEButton.setSizePolicy(sizePolicy)
        self.CEButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.CEButton.setFont(font)
        self.CEButton.setObjectName("CEButton")
        self.CButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("C"))
        self.CButton.setGeometry(QtCore.QRect(210, 140, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CButton.sizePolicy().hasHeightForWidth())
        self.CButton.setSizePolicy(sizePolicy)
        self.CButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.CButton.setFont(font)
        self.CButton.setObjectName("CButton")
        self.DelButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.remove_it())  # xx
        self.DelButton.setGeometry(QtCore.QRect(315, 140, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DelButton.sizePolicy().hasHeightForWidth())
        self.DelButton.setSizePolicy(sizePolicy)
        self.DelButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.DelButton.setFont(font)
        self.DelButton.setObjectName("DelButton")
        self.squareButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("??"))
        self.squareButton.setGeometry(QtCore.QRect(104, 205, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.squareButton.sizePolicy().hasHeightForWidth())
        self.squareButton.setSizePolicy(sizePolicy)
        self.squareButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.squareButton.setFont(font)
        self.squareButton.setObjectName("squareButton")
        self.divideButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("/"))
        self.divideButton.setGeometry(QtCore.QRect(315, 205, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.divideButton.sizePolicy().hasHeightForWidth())
        self.divideButton.setSizePolicy(sizePolicy)
        self.divideButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.divideButton.setFont(font)
        self.divideButton.setObjectName("divideButton")
        self.reverseButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("??")) 
        self.reverseButton.setGeometry(QtCore.QRect(0, 205, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reverseButton.sizePolicy().hasHeightForWidth())
        self.reverseButton.setSizePolicy(sizePolicy)
        self.reverseButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.reverseButton.setFont(font)
        self.reverseButton.setObjectName("reverseButton")
        self.rootButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("??"))
        self.rootButton.setGeometry(QtCore.QRect(210, 205, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rootButton.sizePolicy().hasHeightForWidth())
        self.rootButton.setSizePolicy(sizePolicy)
        self.rootButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.rootButton.setFont(font)
        self.rootButton.setObjectName("rootButton")
        self.eightButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("8"))
        self.eightButton.setGeometry(QtCore.QRect(104, 270, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eightButton.sizePolicy().hasHeightForWidth())
        self.eightButton.setSizePolicy(sizePolicy)
        self.eightButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.eightButton.setFont(font)
        self.eightButton.setObjectName("eightButton")
        self.fourButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("4"))
        self.fourButton.setGeometry(QtCore.QRect(0, 335, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fourButton.sizePolicy().hasHeightForWidth())
        self.fourButton.setSizePolicy(sizePolicy)
        self.fourButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.fourButton.setFont(font)
        self.fourButton.setObjectName("fourButton")
        self.minusButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("-"))
        self.minusButton.setGeometry(QtCore.QRect(315, 335, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.minusButton.sizePolicy().hasHeightForWidth())
        self.minusButton.setSizePolicy(sizePolicy)
        self.minusButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.minusButton.setFont(font)
        self.minusButton.setObjectName("minusButton")
        self.multiplyButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("*"))
        self.multiplyButton.setGeometry(QtCore.QRect(315, 270, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.multiplyButton.sizePolicy().hasHeightForWidth())
        self.multiplyButton.setSizePolicy(sizePolicy)
        self.multiplyButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.multiplyButton.setFont(font)
        self.multiplyButton.setObjectName("multiplyButton")
        self.fiveButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("5"))
        self.fiveButton.setGeometry(QtCore.QRect(104, 335, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fiveButton.sizePolicy().hasHeightForWidth())
        self.fiveButton.setSizePolicy(sizePolicy)
        self.fiveButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.fiveButton.setFont(font)
        self.fiveButton.setObjectName("fiveButton")
        self.sevenButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("7"))
        self.sevenButton.setGeometry(QtCore.QRect(0, 270, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sevenButton.sizePolicy().hasHeightForWidth())
        self.sevenButton.setSizePolicy(sizePolicy)
        self.sevenButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.sevenButton.setFont(font)
        self.sevenButton.setObjectName("sevenButton")
        self.nineButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("9"))
        self.nineButton.setGeometry(QtCore.QRect(210, 270, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nineButton.sizePolicy().hasHeightForWidth())
        self.nineButton.setSizePolicy(sizePolicy)
        self.nineButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.nineButton.setFont(font)
        self.nineButton.setStyleSheet("")
        self.nineButton.setObjectName("nineButton")
        self.sixButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("6"))
        self.sixButton.setGeometry(QtCore.QRect(210, 335, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sixButton.sizePolicy().hasHeightForWidth())
        self.sixButton.setSizePolicy(sizePolicy)
        self.sixButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.sixButton.setFont(font)
        self.sixButton.setObjectName("sixButton")
        self.equalButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.math_result())
        self.equalButton.setGeometry(QtCore.QRect(315, 465, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.equalButton.sizePolicy().hasHeightForWidth())
        self.equalButton.setSizePolicy(sizePolicy)
        self.equalButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.equalButton.setFont(font)
        self.equalButton.setStyleSheet("background-color: rgb(138, 125, 103);")
        self.equalButton.setObjectName("equalButton")
        self.zeroButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("0"))
        self.zeroButton.setGeometry(QtCore.QRect(104, 465, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zeroButton.sizePolicy().hasHeightForWidth())
        self.zeroButton.setSizePolicy(sizePolicy)
        self.zeroButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.zeroButton.setFont(font)
        self.zeroButton.setObjectName("zeroButton")
        self.threeButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("3"))
        self.threeButton.setGeometry(QtCore.QRect(210, 400, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.threeButton.sizePolicy().hasHeightForWidth())
        self.threeButton.setSizePolicy(sizePolicy)
        self.threeButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.threeButton.setFont(font)
        self.threeButton.setObjectName("threeButton")
        self.twoButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("2"))
        self.twoButton.setGeometry(QtCore.QRect(104, 400, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.twoButton.sizePolicy().hasHeightForWidth())
        self.twoButton.setSizePolicy(sizePolicy)
        self.twoButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.twoButton.setFont(font)
        self.twoButton.setObjectName("twoButton")
        self.oneButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("1"))
        self.oneButton.setGeometry(QtCore.QRect(0, 400, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.oneButton.sizePolicy().hasHeightForWidth())
        self.oneButton.setSizePolicy(sizePolicy)
        self.oneButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.oneButton.setFont(font)
        self.oneButton.setObjectName("oneButton")
        self.plusButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("+"))
        self.plusButton.setGeometry(QtCore.QRect(315, 400, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plusButton.sizePolicy().hasHeightForWidth())
        self.plusButton.setSizePolicy(sizePolicy)
        self.plusButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.plusButton.setFont(font)
        self.plusButton.setObjectName("plusButton")
        self.commaButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it(","))
        self.commaButton.setGeometry(QtCore.QRect(210, 465, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.commaButton.sizePolicy().hasHeightForWidth())
        self.commaButton.setSizePolicy(sizePolicy)
        self.commaButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.commaButton.setFont(font)
        self.commaButton.setObjectName("commaButton")
        self.minplusButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.plus_minus_it())
        self.minplusButton.setGeometry(QtCore.QRect(0, 465, 111, 70))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.minplusButton.sizePolicy().hasHeightForWidth())
        self.minplusButton.setSizePolicy(sizePolicy)
        self.minplusButton.setMinimumSize(QtCore.QSize(56, 34))
        font = QtGui.QFont()
        font.setFamily("Book Antiqua")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.minplusButton.setFont(font)
        self.minplusButton.setObjectName("minplusButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 422, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

#---------buradan a≈üaƒüƒ±sƒ± QT Designer'dan alƒ±nan kod haricinde eklenenler ----------------------------------




    def math_result(self):
        #ekranda olanƒ± yakala;
        screen = self.outputLabel.text()
        #virg√ºl√º noktaya √ßevir ve sonucu hesapla
        try:
            result = eval(screen)
            #ekrana yazdƒ±r
            if result%10 == 0:
                result = int(result) # xxEdit: decimal'i g√∂stermemek i√ßin. Ama sadece 10 i√ßin olmamalƒ±.
            else:
                pass
            self.outputLabel.setText(str(result))
        except:
            self.outputLabel.setText("ERROR")

    # remove last char
    def remove_it(self):
        #ekranda olanƒ± yakala;
        screen = self.outputLabel.text()
        #son karakteri sil
        screen = screen[:-1]
        #outputu ekrana tekrar yazdƒ±r;
        self.outputLabel.setText(screen)

    #  change from (+ to -) or (- to +)

    def plus_minus_it(self):  # xxEdit : t√ºm - 'leri √ßƒ±karƒ±yor sadece ba≈ütakini √ßƒ±karmasƒ± lazƒ±m
        #ekranda olanƒ± yakala;
        screen = self.outputLabel.text()
        if "-" in screen:
            self.outputLabel.setText(screen.replace("-",""))
        else:
            self.outputLabel.setText(f"-{screen}")


    def dot_it(self):
        screen = self.outputLabel.text()  
        # ekranda son karakter virg√ºl ise daha fazla virg√ºl koyulamasƒ±n;
        if screen[-1] == ",":
            pass
        else:
            self.outputLabel.setText(f"{screen}.")

    def press_it(self, pressed):
        if pressed == "C" or pressed == "CE":  #xxEdit: CE  sadece son i≈ülemden sonra girilen sayƒ±yƒ± temizlerken C her≈üeyi temizler. Fakat burda b√∂yle varsaydƒ±m.
            self.outputLabel.setText("0")
        else:
            #check if starts with 0 and delete 0
            if self.outputLabel.text() == '0':
                self.outputLabel.setText('')
            else:
                self.outputLabel.setText(f'{self.outputLabel.text()}{pressed}' )  

        """ d√ºzeltilecek maddeler:
        sayƒ±dan √∂nce - haricinde i≈ülem girememe
        1/x, x2, 2k√∂kx ve CE butonlarƒ±nƒ±n fonksiyonlarƒ±
        """
        
        #---------buradan yukarƒ±sƒ± QT Designer'dan alƒ±nan kod haricinde eklenenler ----------------------------------


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Calculator"))
        self.outputLabel.setText(_translate("MainWindow", "0"))
        self.percentButton.setText(_translate("MainWindow", "%"))
        self.CEButton.setText(_translate("MainWindow", "CE"))
        self.CButton.setText(_translate("MainWindow", "C"))
        self.DelButton.setText(_translate("MainWindow", "‚å´"))
        self.squareButton.setText(_translate("MainWindow", "x¬≤"))
        self.divideButton.setText(_translate("MainWindow", "√∑"))
        self.reverseButton.setText(_translate("MainWindow", "1/x"))
        self.rootButton.setText(_translate("MainWindow", "¬≤‚àöx"))
        self.eightButton.setText(_translate("MainWindow", "8"))
        self.fourButton.setText(_translate("MainWindow", "4"))
        self.minusButton.setText(_translate("MainWindow", "-"))
        self.multiplyButton.setText(_translate("MainWindow", "x"))
        self.fiveButton.setText(_translate("MainWindow", "5"))
        self.sevenButton.setText(_translate("MainWindow", "7"))
        self.nineButton.setText(_translate("MainWindow", "9"))
        self.sixButton.setText(_translate("MainWindow", "6"))
        self.equalButton.setText(_translate("MainWindow", "="))
        self.zeroButton.setText(_translate("MainWindow", "0"))
        self.threeButton.setText(_translate("MainWindow", "3"))
        self.twoButton.setText(_translate("MainWindow", "2"))
        self.oneButton.setText(_translate("MainWindow", "1"))
        self.plusButton.setText(_translate("MainWindow", "+"))
        self.commaButton.setText(_translate("MainWindow", ","))
        self.minplusButton.setText(_translate("MainWindow", "¬±"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

