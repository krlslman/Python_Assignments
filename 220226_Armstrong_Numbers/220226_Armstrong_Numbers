{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Assignment_011/03_(Armstrong Numbers).ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Task:**\n",
        "\n",
        "Find out if a given number is an \"Armstrong Number\".\n",
        "\n",
        "- An n-digit number that is the sum of the nth powers of its digits is called an n-Armstrong number. Examples :\n",
        "\n",
        "(second chars of the 2 number digits are upper characters below:)\n",
        "1.   371 = 33 + 73 + 13;\n",
        "2.   9474 = 94 + 44 + 74 + 44;\n",
        "3.   93084 = 95 + 35 + 05 + 85 + 45.\n",
        "\n",
        "**Write a Python program that;**\n",
        "\n",
        "- takes a positive integer number from the user,\n",
        "- checks the entered number if it is Armstrong,\n",
        "- consider the negative, float and any entries other than numeric values then \n",
        "- display a warning message to the user."
      ],
      "metadata": {
        "id": "SCIJpO0Ez8YS"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "zE_R-vAlzwSj"
      },
      "outputs": [],
      "source": [
        "##user_number = abs(int(input(\"Enter a positive integer number : \")))\n",
        "while True:\n",
        "  user_number = float(input(\"Enter a positive integer number : \"))\n",
        "  if user_number.is_integer and user_number > 0:\n",
        "    user_number=int(user_number)  \n",
        "    break\n",
        "  else:\n",
        "    print(user_number,\" is an invalid entry. Don't use non-numeric, float, or negative values!\")\n",
        "\n",
        "sum = 0\n",
        "# sum_list= []\n",
        "for i in range(len(str(user_number))):  # 93084\n",
        "#   sum_list.append(int( str(user_number)[i] ) ** int( str(len(str(user_number))) ))\n",
        "  sum += int( str(user_number)[i] ) ** int( str(len(str(user_number))) )\n",
        "  \n",
        "if sum == user_number:\n",
        "  print(user_number, \" is an Armstrong number\")\n",
        "else:\n",
        "  print(user_number, \" is NOT an Armstrong number\")\n",
        "# print(\"sum_list : \",sum_list)\n",
        "\n",
        "# print(type(user_number))\n",
        "# print(type(sum_list))\n",
        "# print(type(sum))\n"
      ]
    }
  ]
}
